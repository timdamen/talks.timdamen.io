---
import { slugifyStr } from "@/utils/slugify";
import type { CollectionEntry } from "astro:content";
import { getPath } from "@/utils/getPath";
import Datetime from "./Datetime.astro";

export interface Props extends CollectionEntry<"blog"> {
  variant?: "h2" | "h3";
  largeImage?: boolean;
}

const { variant = "h2", largeImage = false, data, id, filePath } = Astro.props;

const { title, description, pubDatetime, modDatetime, timezone, ogImage } = data;

const headerProps = {
  style: { viewTransitionName: slugifyStr(title + 'featured') },
  class: "text-lg font-medium decoration-dashed hover:underline",
};
---

<div class="my-3">
  {ogImage && largeImage && (
    <img
      src={typeof ogImage === "string" ? ogImage : ogImage.src}
      alt={`Thumbnail for ${title}`}
      width={642}
      height={360}
      loading="lazy"
      decoding="async"
      data-href={getPath(id, filePath)}
      class="mb-2 w-full rounded object-cover border-accent border-2 cursor-pointer"
    />
  )}
    {ogImage && !largeImage && (
    <img
      src={typeof ogImage === "string" ? ogImage : ogImage.src}
      alt={`Thumbnail for ${title}`}
      width={320}
      height={172}
      loading="lazy"
      decoding="async"
      data-href={getPath(id, filePath)}
      class="mb-2 md:h-44 w-full rounded object-cover border-accent border-2 cursor-pointer"
    />
  )}
  <a
    href={getPath(id, filePath)}
    class="inline-block text-lg font-medium text-accent decoration-dashed underline-offset-4 focus-visible:no-underline focus-visible:underline-offset-0"
  >
    {
      variant === "h2" ? (
        <h2 {...headerProps}>{title}</h2>
      ) : (
        <h3 {...headerProps}>{title}</h3>
      )
    }
  </a>
  <div class="flex flex-col md:flex-row mb-2 items-start sm:items-center">
    <span class="mr-3 text-sm italic mb-1 sm:mb-0">
      @ {data.conference}
    </span>
      <Datetime {pubDatetime} {modDatetime} {timezone} />
  </div>
    {
    largeImage && (
      <p class="text-base">{description}</p>
    )
  }

</div>

<script>
  import { navigate } from 'astro:transitions/client';

  document.addEventListener('astro:page-load', () => {
    // Ensure all images with data-href are clickable
    document.querySelectorAll('img[data-href]').forEach(img => {
      img.addEventListener('click', () => {
        const href = img.getAttribute('data-href');
        if (href) {
          navigate(href);
        }
      });
    });
  });
</script>