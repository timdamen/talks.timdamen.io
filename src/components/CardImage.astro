---
import { slugifyStr } from "@/utils/slugify";
import type { CollectionEntry } from "astro:content";
import Location from "@/assets/icons/IconLocation.svg";
import { getPath } from "@/utils/getPath";
import Datetime from "./Datetime.astro";

export interface Props extends CollectionEntry<"blog"> {
  variant?: "h2" | "h3";
  largeImage?: boolean;
}

const { variant = "h2", largeImage = false, data, id, filePath } = Astro.props;

const { title, description, pubDatetime, modDatetime, timezone, ogImage } =
  data;

const headerProps = {
  style: { viewTransitionName: slugifyStr(title + "featured") },
  class: "text-lg font-medium decoration-dashed hover:underline",
};
---

<div class="my-3">
  {
    ogImage && largeImage && (
      <img
        src={typeof ogImage === "string" ? ogImage : ogImage.src}
        alt={`Thumbnail for ${title}`}
        width={642}
        height={360}
        loading="lazy"
        decoding="async"
        data-href={getPath(id, filePath)}
        class="mb-2 w-full cursor-pointer rounded border-2 border-accent object-cover"
      />
    )
  }
  {
    ogImage && !largeImage && (
      <img
        src={typeof ogImage === "string" ? ogImage : ogImage.src}
        alt={`Thumbnail for ${title}`}
        width={320}
        height={172}
        loading="lazy"
        decoding="async"
        data-href={getPath(id, filePath)}
        class="mb-2 w-full cursor-pointer rounded border-2 border-accent object-cover md:h-44"
      />
    )
  }
  <a
    href={getPath(id, filePath)}
    class="inline-block text-lg font-medium text-accent decoration-dashed underline-offset-4 focus-visible:no-underline focus-visible:underline-offset-0"
  >
    {
      variant === "h2" ? (
        <h2 {...headerProps}>{title}</h2>
      ) : (
        <h3 {...headerProps}>{title}</h3>
      )
    }
  </a>
  <div class="mb-2 flex flex-col items-start md:flex-row md:items-center">
    <span class="mr-3 mb-1 flex items-center text-sm italic sm:mb-0">
      <span aria-label="at">
        <Location width={16} height={16} class="mr-1" />
      </span>
      <span>{data.conference}</span>
    </span>
    <Datetime {pubDatetime} {modDatetime} {timezone} />
  </div>
  {largeImage && <p class="text-base">{description}</p>}
</div>

<script>
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    // Ensure all images with data-href are clickable
    document.querySelectorAll("img[data-href]").forEach(img => {
      img.addEventListener("click", () => {
        const href = img.getAttribute("data-href");
        if (href) {
          navigate(href);
        }
      });
    });
  });
</script>
